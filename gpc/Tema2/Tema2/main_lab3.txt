#include <glut.h>
#include "lab3_1.cpp"
#include "lab3_2.cpp"
#include "lab3_4.cpp"
#include "Mandelbrot.cpp"

namespace
{
	unsigned char prevKey;

	// multimea Julia-Fatou pentru z0 = 0 si c = -0.12375+0.056805i
	void DisplayJ1()
	{
		CComplex c(-0.12375, 0.056805);
		CJuliaFatou cjf(c);

		glColor3f(1.0, 0.1, 0.1);
		cjf.setnriter(30);
		cjf.display(-0.8, -0.4, 0.8, 0.4);
	}

	// multimea Julia-Fatou pentru z0 = 0 si c = -0.012+0.74i
	void DisplayJ2()
	{
		CComplex c(-0.012, 0.74);
		CJuliaFatou cjf(c);

		glColor3f(1.0, 0.1, 0.1);
		cjf.setnriter(30);
		cjf.display(-1, -1, 1, 1);
	}

	void Init(void)
	{
		glClearColor(1.0, 1.0, 1.0, 1.0);

		glLineWidth(1);

		glPointSize(3);

		glPolygonMode(GL_FRONT, GL_LINE);
	}

	void Display(void)
	{
		switch (prevKey)
		{
		case '0':
			glClear(GL_COLOR_BUFFER_BIT);
			nivel = 0;
			fprintf(stderr, "nivel = %d\n", nivel);
			break;
		case '1':
			glClear(GL_COLOR_BUFFER_BIT);
			Displayk1();
			break;
		case '2':
			glClear(GL_COLOR_BUFFER_BIT);
			Displayk2();
			break;
		case '3':
			glClear(GL_COLOR_BUFFER_BIT);
			Displayk3();
			break;
		case '4':
			glClear(GL_COLOR_BUFFER_BIT);
			Displayk4();
			break;
		case '5':
			glClear(GL_COLOR_BUFFER_BIT);
			DisplayJ1();
			break;
		case '6':
			glClear(GL_COLOR_BUFFER_BIT);
			DisplayJ2();
			break;
		case '7':
			glClear(GL_COLOR_BUFFER_BIT);
			Mandelbrot::Display1();
			break;
		case '8':
			glClear(GL_COLOR_BUFFER_BIT);
			Img1::render();
			break;
		case '9':
			glClear(GL_COLOR_BUFFER_BIT);
			Img2::render();
			break;
		case '-':
			glClear(GL_COLOR_BUFFER_BIT);
			Img3::render();
			break;
		default:
			break;
		}

		glFlush();
	}

	void Reshape(int w, int h)
	{
		glViewport(0, 0, (GLsizei)w, (GLsizei)h);
	}

	void KeyboardFunc(unsigned char key, int x, int y)
	{
		prevKey = key;
		if (key == 27) // escape
			exit(0);
		glutPostRedisplay();
	}

	void MouseFunc(int button, int state, int x, int y)
	{
	}

	int mainex1lab3(int argc, char** argv)
	{
		glutInit(&argc, argv);

		glutInitWindowSize(DIM, DIM);

		glutInitWindowPosition(100, 100);

		glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);

		glutCreateWindow(argv[0]);

		Init();

		glutReshapeFunc(Reshape);

		glutKeyboardFunc(KeyboardFunc);

		glutMouseFunc(MouseFunc);

		glutDisplayFunc(Display);

		glutMainLoop();

		return 0;
	}
}
